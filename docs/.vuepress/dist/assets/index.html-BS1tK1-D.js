import{_ as s,c as i,d as a,o as n}from"./app-dRKKNDlF.js";const l={};function d(t,e){return n(),i("div",null,e[0]||(e[0]=[a(`<h2 id="项目地址" tabindex="-1"><a class="header-anchor" href="#项目地址"><span>项目地址</span></a></h2><blockquote><p><a href="https://github.com/coolsnowwolf/lede" target="_blank" rel="noopener noreferrer">Lean的Openwrt源码仓库</a></p></blockquote><div class="hint-container important"><p class="hint-container-title">编译注意事项</p><ol><li>不要用 <code>root</code> 用户进行编译！！！</li><li>国内用户编译前最好准备好梯子</li><li>默认登陆IP <code>192.168.1.1</code> 密码 <code>password</code></li></ol></div><h2 id="编译命令" tabindex="-1"><a class="header-anchor" href="#编译命令"><span>编译命令</span></a></h2><div class="vp-steps"><ol><li><p>首先装好 Linux 系统，推荐 Debian 或 Ubuntu LTS</p></li><li><p>安装编译依赖</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>sudo apt update -y</span></span>
<span class="line"><span>sudo apt full-upgrade -y</span></span>
<span class="line"><span>sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \\</span></span>
<span class="line"><span>bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \\</span></span>
<span class="line"><span>genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \\</span></span>
<span class="line"><span>libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \\</span></span>
<span class="line"><span>libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \\</span></span>
<span class="line"><span>python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \\</span></span>
<span class="line"><span>swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">如果使用 <code>root</code> 执行了以上命令，那接下来必须使用 <code>非root</code> 权限用户进行后续操作</p></div></li><li><p>下载好源代码</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git clone https://github.com/coolsnowwolf/lede</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>进入 lede 目录（源码存在此目录，所以此目录即为 buildroot 目录）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cd lede</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>更新系统组件</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>./scripts/feeds update -a</span></span>
<span class="line"><span>./scripts/feeds install -a</span></span>
<span class="line"><span>make menuconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">如果已经成功编译过，再次编译时还要同步 L 大的代码</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>git pull</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div></li><li><p>运行 <code>make menuconfig</code> 入选单界面，选择 CPU 架构，型号，固件类型，所需插件及工具等，记得先 <code>Save</code> 再退出</p></li><li><p>下载源码文件到 <code>buildroot</code> 录下的 <code>dl</code> 目录</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>make download -j8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>WSL</code> 编译前可尝试运行以下代码</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>正式开始编译，建议先运行 <code>screen</code> 命令守护进程，尤其是在 <code>VPS</code> 上编译时（ <code>-j</code> 后面是线程数，第一次编译推荐用单线程）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>make V=s -j1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol></div><h2 id="二次编译" tabindex="-1"><a class="header-anchor" href="#二次编译"><span>二次编译</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cd lede</span></span>
<span class="line"><span>git pull</span></span>
<span class="line"><span>./scripts/feeds update -a &amp;&amp; ./scripts/feeds install -a</span></span>
<span class="line"><span>make defconfig</span></span>
<span class="line"><span>make download -j8</span></span>
<span class="line"><span>PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span></span>
<span class="line"><span>make V=s -j$(nproc)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重新配置" tabindex="-1"><a class="header-anchor" href="#重新配置"><span>重新配置</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>rm -rf ./tmp &amp;&amp; rm -rf .config</span></span>
<span class="line"><span>make menuconfig</span></span>
<span class="line"><span>make download </span></span>
<span class="line"><span>PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span></span>
<span class="line"><span>make V=s -j$(nproc)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成-seed-config-文件" tabindex="-1"><a class="header-anchor" href="#生成-seed-config-文件"><span>生成 seed.config 文件</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>make defconfig</span></span>
<span class="line"><span>./scripts/diffconfig.sh &gt; seed.config</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const c=s(l,[["render",d]]),p=JSON.parse('{"path":"/article/8iq6pzx4/","title":"使用 LEDE 源码编译固件","lang":"zh-CN","frontmatter":{"title":"使用 LEDE 源码编译固件","createTime":"2025/04/14 19:53:31","permalink":"/article/8iq6pzx4/","tags":["lede","openwrt","编译"],"description":"项目地址 Lean的Openwrt源码仓库 编译注意事项 不要用 root 用户进行编译！！！ 国内用户编译前最好准备好梯子 默认登陆IP 192.168.1.1 密码 password 编译命令 首先装好 Linux 系统，推荐 Debian 或 Ubuntu LTS 安装编译依赖 如果使用 root 执行了以上命令，那接下来必须使用 非root 权...","head":[["meta",{"property":"og:url","content":"https://blog.hnr1.xyz/article/8iq6pzx4/"}],["meta",{"property":"og:site_name","content":"𝒷𝑒𝓈𝓉 𝓂𝒶𝓃"}],["meta",{"property":"og:title","content":"使用 LEDE 源码编译固件"}],["meta",{"property":"og:description","content":"项目地址 Lean的Openwrt源码仓库 编译注意事项 不要用 root 用户进行编译！！！ 国内用户编译前最好准备好梯子 默认登陆IP 192.168.1.1 密码 password 编译命令 首先装好 Linux 系统，推荐 Debian 或 Ubuntu LTS 安装编译依赖 如果使用 root 执行了以上命令，那接下来必须使用 非root 权..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"lede"}],["meta",{"property":"article:tag","content":"openwrt"}],["meta",{"property":"article:tag","content":"编译"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 LEDE 源码编译固件\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.71,"words":512},"git":{},"autoDesc":true,"filePathRelative":"2.软件/2.OpenWrt/b-software-openwrt-2.compile-lede-firmware.md","categoryList":[{"id":"5231f5","sort":2,"name":"软件"},{"id":"facd5c","sort":2,"name":"OpenWrt"}]}');export{c as comp,p as data};
